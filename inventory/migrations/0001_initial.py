# Generated by Django 5.2 on 2025-07-06 07:32

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=90)),
                ('permission', models.CharField(choices=[('admin', 'Admin'), ('employee', 'Employee'), ('owner', 'Owner')], default='employee')),
                ('is_owner', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_employee', models.BooleanField(default=False)),
                ('is_banned', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'ordering': ['is_owner', 'is_admin', 'is_employee', 'is_banned'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=70)),
                ('company_email', models.EmailField(max_length=254, unique=True)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=15)),
                ('employees', models.ManyToManyField(related_name='companies', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_owner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'companies',
                'ordering': ['company_name'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='added_by', to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_company', to='inventory.company')),
            ],
            options={
                'ordering': ['-added_date'],
            },
        ),
        migrations.CreateModel(
            name='category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=40, unique=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_company', to='inventory.company')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employeees', to='inventory.company'),
        ),
        migrations.CreateModel(
            name='Engineer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engineers_company', to='inventory.company')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('part_number', models.TextField(max_length=30)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference', models.TextField(blank=True, max_length=40, null=True)),
                ('supplier', models.CharField(max_length=70)),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('required_quantity', models.PositiveSmallIntegerField(default=0)),
                ('arrived_quantity', models.PositiveSmallIntegerField(default=0)),
                ('ordered', models.BooleanField(default=False)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='added_by_user', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='item_category', to='inventory.category')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_company', to='inventory.company')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=70)),
                ('job_id', models.BigIntegerField()),
                ('status', models.CharField(choices=[('ready', 'Ready'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('quoted', 'Quoted and waiting')], max_length=20)),
                ('quotation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('parent_account', models.CharField(max_length=70)),
                ('added_date', models.DateField(auto_now_add=True)),
                ('items_arrived', models.BooleanField(default=False)),
                ('post_code', models.CharField(blank=True, max_length=10, null=True)),
                ('quoted', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_company', to='inventory.company')),
                ('engineer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.engineer')),
            ],
            options={
                'ordering': ['-added_date'],
                'unique_together': {('job_id', 'company')},
            },
        ),
        migrations.CreateModel(
            name='JobItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_quantity', models.PositiveSmallIntegerField(default=0)),
                ('arrived_quantity', models.PositiveSmallIntegerField(default=0)),
                ('reference', models.TextField(blank=True, max_length=40, null=True)),
                ('ordered', models.BooleanField(default=False)),
                ('arrived', models.BooleanField(default=False)),
                ('is_used', models.BooleanField(default=False)),
                ('from_warehouse', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobitem_category', to='inventory.category')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_items', to='inventory.item')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='items', to='inventory.job')),
                ('was_for_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='moveditems', to='inventory.job')),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouse_quantity', models.PositiveSmallIntegerField(default=0)),
                ('reference', models.TextField(blank=True, max_length=40, null=True)),
                ('is_used', models.BooleanField(default=False)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='warehouse_category', to='inventory.category')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouse_company_items', to='inventory.company')),
                ('is_moved_from_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='warehousemoveditems', to='inventory.job')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouse_items', to='inventory.item')),
            ],
        ),
    ]
